services:
  # Traefik 2 - Reverse Proxy
  traefik:
    container_name: traefik
    image: traefik:2.11.2
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    networks:
      transcendence:
        ipv4_address: 10.9.99.4
    command: # CLI arguments
      - --global.checkNewVersion=true
      - --global.sendAnonymousUsage=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.traefik.address=:8080
      - --entrypoints.wss-c.address=:8003
      - --entrypoints.wss-g.address=:8004
      - --entrypoints.wss-mm.address=:8005
      - --entrypoints.websecure.http.tls=true
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.permanent=true
      - --api=true
      - --api.dashboard=true
      # - --api.insecure=true
      # - --serversTransport.insecureSkipVerify=true
      # Allow these IPs to set the X-Forwarded-* headers - Cloudflare IPs: https://www.cloudflare.com/ips/
      - --entrypoints.websecure.forwardedHeaders.trustedIPs=$CLOUDFLARE_IPS,$LOCAL_IPS
      - --log=true
      - --log.filePath=/logs/traefik.log
      - --log.level=DEBUG # (Default: error) DEBUG, INFO, WARN, ERROR, FATAL, PANIC
      - --accessLog=true
      - --accessLog.filePath=/logs/access.log
      - --accessLog.bufferingSize=100 # Configuring a buffer of 100 lines
      - --accessLog.filters.statusCodes=204-299,400-499,500-599
      - --providers.consulcatalog=true
      # - --providers.consulcatalog.prefix=traefik 
      - --providers.consulcatalog.defaultRule=Host(`{{ .Name }}`)
      - --providers.consulcatalog.endpoint.address=$CONSUL_HTTP_ADDR
      - --providers.consulcatalog.endpoint.token=changeme
      - --entrypoints.websecure.http.tls.options=tls-opts@file
      - --providers.docker=true
      - --providers.docker.endpoint=unix:///var/run/docker.sock
      - --providers.docker.exposedByDefault=false
      - --providers.docker.network=transcendence 
      - --providers.docker.swarmMode=false
      - --providers.nomad=true 
      - --providers.nomad.endpoint.address=$NOMAD_HTTP_ADDR
      - --providers.nomad.defaultRule=Host(`{{ .Name }}.korporate.org`)
      # Add dns-cloudflare as default certresolver for all services. Also enables TLS and no need to specify on individual services
      - --entrypoints.websecure.http.tls.certresolver=dns-cloudflare
      - --entrypoints.websecure.http.tls.domains[0].main=$DOMAINNAME
      - --entrypoints.websecure.http.tls.domains[0].sans=*.$DOMAINNAME
      # - --entrypoints.websecure.http.tls.domains[1].main=$DOMAINNAME_2 # Pulls main cert for second domain
      # - --entrypoints.websecure.http.tls.domains[1].sans=*.$DOMAINNAME_2 # Pulls wildcard cert for second domain
      - --providers.file.directory=/rules # Load dynamic configuration from one or more .toml or .yml files in a directory
      - --providers.file.watch=true # Only works on top level files in the rules folder
      #- --certificatesResolvers.dns-cloudflare.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory # LetsEncrypt Staging Server - uncomment when testing
      - --certificatesResolvers.dns-cloudflare.acme.storage=/acme.json
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.provider=cloudflare
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.resolvers=1.1.1.1:53,1.0.0.1:53
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.delayBeforeCheck=90 # To delay DNS check and reduce LE hitrate
      - --certificatesResolvers.dns-cloudflare.acme.email=$CLOUDFLARE_EMAIL      
      - --certificatesResolvers.dns-cloudflare.acme.storage=/acme.json      
      - --certificatesresolvers.dns-cloudflare.acme.dnschallenge=true
      # Modsecurity Plugin
      # - --experimental.plugins.traefik-modsecurity-plugin.modulename=github.com/acouvreur/traefik-modsecurity-plugin
      # - --experimental.plugins.traefik-modsecurity-plugin.version=v1.3.0
      - --experimental.plugins.traefik-modsecurity-plugin.modulename=github.com/madebymode/traefik-modsecurity-plugin
      - --experimental.plugins.traefik-modsecurity-plugin.version=v1.5.0

    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
    volumes:
      - $DOCKERDIR/builder/apps/traefik/rules/$HOSTNAME:/rules # Dynamic File Provider directory
      - $DOCKERDIR/builder/apps/traefik/acme/acme.json:/acme.json # Certs File 
      - $DOCKERDIR/builder/apps/traefik/logs/:/logs # Traefik logs
      # - $DOCKERDIR/builder/apps/traefik/traefik.toml:/etc/traefik/traefik.toml
      - /var/run/docker.sock:/var/run/docker.sock:rotraefik-modsecurity-plugin
    secrets:
      - cf_dns_api_token
      - basic_auth_credentials
    labels:
      - "traefik.enable=true"
      # HTTP Routers
      - "traefik.http.routers.traefik-rtr.entrypoints=websecure"
      - "traefik.http.routers.traefik-rtr.rule=Host(`traefik.korporate.org`)"
      # Services - API
      - "traefik.http.routers.traefik-rtr.service=api@internal"
      # Middlewares
      - "traefik.http.routers.traefik-rtr.middlewares=chain-basic-auth@file"
      # WAF Middleware
      - traefik.http.middlewares.waf.plugin.traefik-modsecurity-plugin.modSecurityUrl=http://waf:80
      - traefik.http.middlewares.waf.plugin.traefik-modsecurity-plugin.maxBodySize=10485760
      - traefik.http.middlewares.waf.plugin.traefik-modsecurity-plugin.cacheEnabled=true
      - traefik.http.middlewares.waf.plugin.traefik-modsecurity-plugin.cacheConditionsMethods=["GET"]
      - traefik.http.middlewares.waf.plugin.traefik-modsecurity-plugin.cacheConditionsNoBody=true
      - traefik.http.middlewares.waf.plugin.traefik-modsecurity-plugin.cacheKeyIncludeMethod=true
      - traefik.http.middlewares.waf.plugin.traefik-modsecurity-plugin.cacheKeyIncludeHost=true
      - traefik.http.middlewares.waf.plugin.traefik-modsecurity-plugin.cacheKeyIncludeRequestURI=true
      - traefik.http.middlewares.waf.plugin.traefik-modsecurity-plugin.cacheKeyIncludeHeaders=true
      - traefik.http.middlewares.waf.plugin.traefik-modsecurity-plugin.cacheKeyHeaders=["User-Agent]
      - traefik.http.middlewares.waf.plugin.traefik-modsecurity-plugin.cacheKeyIncludeRemoteAddress=true
      # Front WAFed
      - traefik.http.routers.front-rtr.entrypoints=websecure
      - traefik.http.routers.front-rtr.rule=Host(`transcendence.korporate.org`)
      - traefik.http.routers.front-rtr.service=front@consulcatalog
      - traefik.http.routers.front-rtr.middlewares=chain-basic-auth@file
      - traefik.http.routers.front-rtr.middlewares=waf@docker
      # auth-api WAFed
      - traefik.http.routers.auth-api-rtr.entrypoints=websecure
      - traefik.http.routers.auth-api-rtr.rule=Host(`auth-api.korporate.org`)
      - traefik.http.routers.auth-api-rtr.service=auth@consulcatalog
      - traefik.http.services.auth@consulcatalog.loadbalancer.server.scheme=https
      - traefik.http.routers.auth-api-rtr.middlewares=chain-basic-auth@file
      - traefik.http.routers.auth-api-rtr.middlewares=waf@docker
      # account-api WAFed
      - traefik.http.routers.account-api-rtr.entrypoints=websecure
      - traefik.http.routers.account-api-rtr.rule=Host(`account-api.korporate.org`)
      - traefik.http.routers.account-api-rtr.service=account@consulcatalog
      - traefik.http.routers.account-api-rtr.middlewares=chain-basic-auth@file
      - traefik.http.routers.account-api-rtr.middlewares=waf@docker
      # cdn-api WAFed
      - traefik.http.routers.cdn-api-rtr.entrypoints=websecure
      - traefik.http.routers.cdn-api-rtr.rule=Host(`cdn-api.korporate.org`)
      - traefik.http.routers.cdn-api-rtr.service=cdn@consulcatalog
      - traefik.http.routers.cdn-api-rtr.middlewares=chain-basic-auth@file
      - traefik.http.routers.cdn-api-rtr.middlewares=waf@docker
      # chat-api WAFed
      - traefik.http.routers.chat-api-rtr.entrypoints=websecure
      - traefik.http.routers.chat-api-rtr.rule=Host(`chat-api.korporate.org`)
      - traefik.http.routers.chat-api-rtr.service=chat@consulcatalog
      - traefik.http.routers.chat-api-rtr.middlewares=chain-basic-auth@file
      - traefik.http.routers.chat-api-rtr.middlewares=waf@docker
      # game-api WAFed
      - traefik.http.routers.game-api-rtr.entrypoints=websecure
      - traefik.http.routers.game-api-rtr.rule=Host(`game-api.korporate.org`)
      - traefik.http.routers.game-api-rtr.service=game@consulcatalog
      - traefik.http.routers.game-api-rtr.middlewares=chain-basic-auth@file
      - traefik.http.routers.game-api-rtr.middlewares=waf@docker
      # game-api WAFed
      - traefik.http.routers.matchmaking-api-rtr.entrypoints=websecure
      - traefik.http.routers.matchmaking-api-rtr.rule=Host(`matchmaking-api.korporate.org`)
      - traefik.http.routers.matchmaking-api-rtr.service=matchmaking@consulcatalog
      - traefik.http.routers.matchmaking-api-rtr.middlewares=chain-basic-auth@file
      - traefik.http.routers.matchmaking-api-rtr.middlewares=waf@docker
      # game-api WAFed
      - traefik.http.routers.cyberrhythm-api-rtr.entrypoints=websecure
      - traefik.http.routers.cyberrhythm-api-rtr.rule=Host(`cyberrhythm-api.korporate.org`)
      - traefik.http.routers.cyberrhythm-api-rtr.service=cyberrhythm@consulcatalog
      - traefik.http.routers.cyberrhythm-api-rtr.middlewares=chain-basic-auth@file
      - traefik.http.routers.cyberrhythm-api-rtr.middlewares=waf@docker
      # foundry-api WAFed
      - traefik.http.routers.foundry-api-rtr.entrypoints=websecure
      - traefik.http.routers.foundry-api-rtr.rule=Host(`foundry-api.korporate.org`)
      - traefik.http.routers.foundry-api-rtr.service=foundry@consulcatalog
      - traefik.http.routers.foundry-api-rtr.middlewares=chain-basic-auth@file
      - traefik.http.routers.foundry-api-rtr.middlewares=waf@docker
      # prometheus WAFed
      - traefik.http.routers.pronetheus-rtr.entrypoints=websecure
      - traefik.http.routers.pronetheus-rtr.rule=Host(`prometheus.korporate.org`)
      - traefik.http.routers.pronetheus-rtr.service=prometheus@consulcatalog
      # - traefik.http.routers.pronetheus-rtr.middlewares=chain-basic-auth@file
      # - traefik.http.routers.pronetheus-rtr.middlewares=waf@docker
      # alertmanager WAFed
      - traefik.http.routers.alertmanager-rtr.entrypoints=websecure
      - traefik.http.routers.alertmanager-rtr.rule=Host(`alertmanager.korporate.org`)
      - traefik.http.routers.alertmanager-rtr.service=alertmanager@consulcatalog
      # - traefik.http.routers.alertmanager-rtr.middlewares=chain-basic-auth@file
      # - traefik.http.routers.alertmanager-rtr.middlewares=waf@docker
      # chat-api ws
      - traefik.http.routers.chat-ws.rule=Host(`chat-api.korporate.org`) && PathPrefix(`/wss`)
      - traefik.http.routers.chat-ws.entrypoints=wss-c
      - traefik.http.routers.chat-ws.service=chat@consulcatalog
