---
# playbooks/roles/consul_template/tasks/_installation.yml

# Tasks to install consul-template via binary from the deploy host

- name: Prepare consul-template binary on Ansible controller (deploy host)
  delegate_to: deploy
  block:
    # Step 1: Create download and extraction directories on controller
    - name: Create download directory on controller
      file:
        path: "{{ consul_template_download_dir }}"
        state: directory
        mode: '0755'

    - name: Create extract directory on controller
      file:
        path: "{{ consul_template_extract_dir }}"
        state: directory
        mode: '0755'

    # Step 2: Download consul-template archive if needed
    - name: Check if consul-template archive exists on controller
      stat:
        path: "{{ consul_template_download_dir }}/{{ consul_template_archive_name }}"
      register: archive_stat

    - name: Check consul-template archive SHA256 on controller
      command: "sha256sum {{ consul_template_download_dir }}/{{ consul_template_archive_name }}"
      register: local_sha256
      when: archive_stat.stat.exists

    - name: Set fact for archive checksum match
      set_fact:
        archive_checksum_valid: "{{ (local_sha256.stdout.split()[0] == consul_template_sha256) }}"
      when: archive_stat.stat.exists

    - name: Download consul-template archive on controller
      get_url:
        url: "{{ consul_template_download_url }}"
        dest: "{{ consul_template_download_dir }}/{{ consul_template_archive_name }}"
        mode: '0644'
      when: not archive_stat.stat.exists or (archive_stat.stat.exists and not archive_checksum_valid)

    - name: Verify consul-template archive checksum on controller
      command: "sha256sum {{ consul_template_download_dir }}/{{ consul_template_archive_name }}"
      register: downloaded_sha256
      when: not archive_checksum_valid and archive_stat.stat.exists

    - name: Fail if consul-template archive checksum does not match
      fail:
        msg: "Checksum mismatch for consul-template archive"
      when: downloaded_sha256.stdout.split()[0] != consul_template_sha256

    # Step 3: Unarchive consul-template on controller
    - name: Unarchive consul-template on controller
      unarchive:
        src: "{{ consul_template_download_dir }}/{{ consul_template_archive_name }}"
        dest: "{{ consul_template_extract_dir }}/"
        remote_src: yes
        mode: '0755'
      when: not archive_checksum_valid or not archive_stat.stat.exists

    # Step 4: Ensure the binary is present after extraction
    - name: Check if consul-template binary exists after extraction on controller
      stat:
        path: "{{ consul_template_extract_dir }}/consul-template"
      register: extracted_binary_stat

    - name: Fail if consul-template binary not found after extraction
      fail:
        msg: "Consul-template binary not found after extraction"
      when: not extracted_binary_stat.stat.exists

    # Step 5: Gather consul-template version on target hosts
    - name: Check consul-template version on target hosts
      command: "{{ consul_template_install_path }}/consul-template --version"
      register: consul_template_version_output
      ignore_errors: yes
      become: yes

    - name: Set fact for installed consul-template version on target hosts
      set_fact:
        installed_consul_template_version: "{{ consul_template_version_output.stdout | regex_search('v([0-9.]+)', '\\1') | default('not_installed') }}"
      when: consul_template_version_output.rc == 0

    - name: Determine if consul-template needs to be installed or updated on target hosts
      set_fact:
        reinstall_consul_template: "{{ installed_consul_template_version != consul_template_version }}"
      when: installed_consul_template_version is defined

    # Step 6: Copy consul-template binary to target hosts if needed
    - name: Copy consul-template binary to target hosts
      copy:
        src: "{{ consul_template_extract_dir }}/consul-template"
        dest: "{{ consul_template_install_path }}/consul-template"
        mode: '0755'
      when: reinstall_consul_template | default(true)
      become: yes

    # Step 7: Ensure consul-template binary is executable on target hosts
    - name: Ensure consul-template binary is executable on target hosts
      file:
        path: "{{ consul_template_install_path }}/consul-template"
        mode: '0755'
      become: yes

    # Step 8: Clean up consul-template archive and extracted binary on controller
    - name: Remove consul-template archive from controller
      file:
        path: "{{ consul_template_download_dir }}/{{ consul_template_archive_name }}"
        state: absent
      delegate_to: deploy

    - name: Remove extracted consul-template binary from controller
      file:
        path: "{{ consul_template_extract_dir }}/consul-template"
        state: absent
      delegate_to: deploy

    - name: Remove extract directory from controller
      file:
        path: "{{ consul_template_extract_dir }}"
        state: absent
      delegate_to: deploy

  when: consul_template_installation_required | default(true)