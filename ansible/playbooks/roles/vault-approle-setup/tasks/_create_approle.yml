---
# playbooks/roles/vault_apprle_setup/tasks/_create_approle.yml

- name: Get list of enabled auth methods from Vault
  shell: |
    vault auth list | grep 'approle/' | wc -l
  register: approle_enabled
  environment:
    VAULT_TOKEN: "{{ vault_parent_token.stdout }}"
  failed_when: approle_enabled.rc != 0
  when: active_vault_host is defined
  changed_when: false

- name: Display AppRole status
  debug:
    msg: >
      AppRole is {{ 'enabled' if approle_enabled.stdout == "1" else 'not enabled' }} in Vault
  when: active_vault_host is defined

- name: Activation de Approle dans le vault actif
  shell: |
    vault auth enable approle
  args:
    executable: /bin/bash
  environment:
    VAULT_TOKEN: "{{ vault_parent_token.stdout }}"
  when:
    - active_vault_host is defined
    - approle_enabled.stdout == "0"

- name: check if approle consul-template is already writed
  shell: |
    vault read auth/approle/role/consul-template-role | grep consul-template-policy | wc -l
  register: approle_already_writed
  environment:
    VAULT_TOKEN: "{{ vault_parent_token.stdout }}"
  failed_when: approle_already_writed.rc != 0
  when: active_vault_host is defined
  changed_when: false

- name: Display AppRole consul-template status
  debug:
    msg: >
      AppRole consul-template is {{ 'already' if approle_already_writed.stdout == "1" else 'not' }} in Vault
  when: active_vault_host is defined

- name: Créer l'AppRole consul-template dans Vault
  shell: |
    vault write auth/approle/role/consul-template-role \
    token_policies="consul-template-policy" \
    token_ttl=1h \
    token_max_ttl=4h \
    secret_id_ttl=24h \
    secret_id_num_uses=10 \
    bind_secret_id=true
  environment:
    VAULT_TOKEN: "{{ vault_parent_token.stdout }}"
  args:
    executable: /bin/bash
  register: approle_creation
  when:
    - active_vault_host is defined
    - approle_already_writed.stdout == "0"
  changed_when: "'key' in approle_creation.stdout"

- name: Récupérer le RoleID de l'AppRole consul-template
  shell: |
    vault read -field=role_id auth/approle/role/consul-template-role/role-id
  environment:
    VAULT_TOKEN: "{{ vault_parent_token.stdout }}"
  args:
    executable: /bin/bash
  register: role_id_output
  run_once: true

- name: Récupérer le SecretID de l'AppRole consul-template
  shell: |
    vault write -f -field=secret_id auth/approle/role/consul-template-role/secret-id
  environment:
    VAULT_TOKEN: "{{ vault_parent_token.stdout }}"
  args:
    executable: /bin/bash
  register: secret_id_output
  run_once: true

- name: Générer le fichier de credentials consul_template_approle_credentials.yml
  copy:
    dest: "{{ secrets_dir }}/consul/consul_template_approle_credentials.yml"
    content: |
      ---
      consul_template_role_id: "{{ role_id_output.stdout }}"
      consul_template_secret_id: "{{ secret_id_output.stdout }}"
    mode: '0600'
  become: yes
  delegate_to: deploy
  run_once: true
