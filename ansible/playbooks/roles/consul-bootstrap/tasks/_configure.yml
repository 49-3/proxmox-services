---
- name: Install rsync
  ansible.builtin.apt:
    pkg:
      - rsync
    state: present

- name: Create consul data directory
  file:
    path: "{{ consul_data_dir }}"
    state: directory
    mode: 0750
    owner: "{{ consul_user_name }}"
    group: "{{ consul_user_name }}"

- name: Create consul config directories
  file:
    path: "{{ item }}"
    state: directory
    mode: 0750
    owner: "root"
    group: "{{ consul_user_name }}"
  with_items:
    - "{{ consul_config_dir }}"
    - "{{ consul_config_dir }}/tls"
    - "{{ consul_config_dir }}/tokens"
    - "{{ consul_config_dir }}/policies"

- name: Generate root certificate for dc
  shell: mkdir -p {{ consul_config_dir }}/certs/ && \
    rm -rf {{ consul_config_dir }}/certs/* && \
    cd {{ consul_config_dir }}/certs/ && \
    consul tls ca create && \
    consul tls cert create -server -dc dc1 -domain consul -additional-dnsname=consul-1.dc1.consul -additional-ipaddress=192.168.1.161 -additional-ipaddress=192.168.1.162 -additional-ipaddress=192.168.1.163 -additional-ipaddress=192.168.1.164 -additional-ipaddress=192.168.1.165 -additional-ipaddress=192.168.1.177 && \
    consul tls cert create -server -dc dc1 -domain consul -additional-dnsname=consul-2.dc1.consul -additional-ipaddress=192.168.1.161 -additional-ipaddress=192.168.1.162 -additional-ipaddress=192.168.1.163 -additional-ipaddress=192.168.1.164 -additional-ipaddress=192.168.1.165 -additional-ipaddress=192.168.1.177 && \
    consul tls cert create -server -dc dc1 -domain consul -additional-dnsname=consul-3.dc1.consul -additional-ipaddress=192.168.1.161 -additional-ipaddress=192.168.1.162 -additional-ipaddress=192.168.1.163 -additional-ipaddress=192.168.1.164 -additional-ipaddress=192.168.1.165 -additional-ipaddress=192.168.1.177 && \
    consul tls cert create -client -dc dc1 -domain consul -additional-dnsname=vault-1.dc1.consul -additional-ipaddress=192.168.1.161 -additional-ipaddress=192.168.1.162 -additional-ipaddress=192.168.1.163 -additional-ipaddress=192.168.1.164 -additional-ipaddress=192.168.1.165 -additional-ipaddress=192.168.1.177 && \
    consul tls cert create -client -dc dc1 -domain consul -additional-dnsname=vault-2.dc1.consul -additional-ipaddress=192.168.1.161 -additional-ipaddress=192.168.1.162 -additional-ipaddress=192.168.1.163 -additional-ipaddress=192.168.1.164 -additional-ipaddress=192.168.1.165 -additional-ipaddress=192.168.1.177 && \
    consul tls cert create -client -dc dc1 -domain consul -additional-dnsname=deploy.dc1.consul -additional-ipaddress=192.168.1.161 -additional-ipaddress=192.168.1.162 -additional-ipaddress=192.168.1.163 -additional-ipaddress=192.168.1.164 -additional-ipaddress=192.168.1.165 -additional-ipaddress=192.168.1.177
  args:
    executable: /bin/bash
    creates: "{{ consul_config_dir }}/certs/consul-agent-ca.pem"
  run_once: true
  become: no

- name: Fetch certificate locally
  include_tasks: "_local_get_certificates.yml"

- name: Remove tls folder
  ansible.builtin.file:
    path: "{{ consul_config_dir }}/tls/"
    state: absent

- name: Create new emptu tls directory
  file:
    path: "{{ item }}"
    state: directory
    mode: 0750
    owner: "root"
    group: "{{ consul_user_name }}"
  with_items:
    - "{{ consul_config_dir }}/tls"

- name: Root certificate upload to masters
  copy:
    src: "{{ consul_local_tls_dir }}/consul-agent-ca.pem"
    dest: "{{ consul_config_dir }}/tls/consul-agent-ca.pem"
    mode: 0640
    owner: "root"
    group: "{{ consul_user_name }}"

- name: Upload consul-agent.pem to consul-1
  copy:
    src: "{{ consul_local_tls_dir }}/dc1-server-consul-0.pem"
    dest: "{{ consul_config_dir }}/tls/consul-agent.pem"
    mode: 0640
    owner: "root"
    group: "{{ consul_user_name }}"
  when: inventory_hostname == "consul-1"

- name: Upload consul-agent-key.pem to consul-1
  copy:
    src: "{{ consul_local_tls_dir }}/dc1-server-consul-0-key.pem"
    dest: "{{ consul_config_dir }}/tls/consul-agent-key.pem"
    mode: 0640
    owner: "root"
    group: "{{ consul_user_name }}"
  when: inventory_hostname == "consul-1"

- name: Upload consul-agent.pem to consul-2
  copy:
    src: "{{ consul_local_tls_dir }}/dc1-server-consul-1.pem"
    dest: "{{ consul_config_dir }}/tls/consul-agent.pem"
    mode: 0640
    owner: "root"
    group: "{{ consul_user_name }}"
  when: inventory_hostname == "consul-2"

- name: Upload consul-agent-key.pe to consul-2
  copy:
    src: "{{ consul_local_tls_dir }}/dc1-server-consul-1-key.pem"
    dest: "{{ consul_config_dir }}/tls/consul-agent-key.pem"
    mode: 0640
    owner: "root"
    group: "{{ consul_user_name }}"
  when: inventory_hostname == "consul-2"

- name: Upload certs to consul-3
  copy:
    src: "{{ consul_local_tls_dir }}/dc1-server-consul-2.pem"
    dest: "{{ consul_config_dir }}/tls/consul-agent.pem"
    mode: 0640
    owner: "root"
    group: "{{ consul_user_name }}"
  when: inventory_hostname == "consul-3"

- name: Upload consul-agent-key.pem to consul-3
  copy:
    src: "{{ consul_local_tls_dir }}/dc1-server-consul-2-key.pem"
    dest: "{{ consul_config_dir }}/tls/consul-agent-key.pem"
    mode: 0640
    owner: "root"
    group: "{{ consul_user_name }}"
  when: inventory_hostname == "consul-3"

- name: Upload certs to vault-1
  copy:
    src: "{{ consul_local_tls_dir }}/dc1-client-consul-0.pem"
    dest: "{{ consul_config_dir }}/tls/consul-agent.pem"
    mode: 0640
    owner: "root"
    group: "{{ consul_user_name }}"
  when: inventory_hostname == "vault-1"

- name: Upload consul-agent-key.pem to vault-1
  copy:
    src: "{{ consul_local_tls_dir }}/dc1-client-consul-0-key.pem"
    dest: "{{ consul_config_dir }}/tls/consul-agent-key.pem"
    mode: 0640
    owner: "root"
    group: "{{ consul_user_name }}"
  when: inventory_hostname == "vault-1"

- name: Upload certs to vault-2
  copy:
    src: "{{ consul_local_tls_dir }}/dc1-client-consul-1.pem"
    dest: "{{ consul_config_dir }}/tls/consul-agent.pem"
    mode: 0640
    owner: "root"
    group: "{{ consul_user_name }}"
  when: inventory_hostname == "vault-2"

- name: Upload consul-agent-key.pem to vault-2
  copy:
    src: "{{ consul_local_tls_dir }}/dc1-client-consul-1-key.pem"
    dest: "{{ consul_config_dir }}/tls/consul-agent-key.pem"
    mode: 0640
    owner: "root"
    group: "{{ consul_user_name }}"
  when: inventory_hostname == "vault-2"

- name: Upload certs to deploy
  copy:
    src: "{{ consul_local_tls_dir }}/dc1-client-consul-2.pem"
    dest: "{{ consul_config_dir }}/tls/consul-agent.pem"
    mode: 0640
    owner: "root"
    group: "{{ consul_user_name }}"
  when: inventory_hostname == "deploy"

- name: Upload consul-agent-key.pem to deploy
  copy:
    src: "{{ consul_local_tls_dir }}/dc1-client-consul-2-key.pem"
    dest: "{{ consul_config_dir }}/tls/consul-agent-key.pem"
    mode: 0640
    owner: "root"
    group: "{{ consul_user_name }}"
  when: inventory_hostname == "deploy"

- name: Get Gossip
  ansible.builtin.command:
    cmd: consul keygen
  register: gossip
  run_once: true
  changed_when: gossip.rc != 0
  become: no

- name: Generate agent-gossip-encryption.hcl configuration
  template:
    src: "{{ consul_mode }}/agent-gossip-encryption.hcl.j2"
    dest: "{{ consul_config_dir }}/agent-gossip-encryption.hcl"
    owner: root
    group: "{{ consul_user_name }}"
    mode: 0640
  when: consul_mode == "server"

- name: Generate agent-server-acl.hcl configuration
  template:
    src: "{{ consul_mode }}/agent-server-acl.hcl.j2"
    dest: "{{ consul_config_dir }}/agent-server-acl.hcl"
    owner: root
    group: "{{ consul_user_name }}"
    mode: 0640
  when: consul_mode == "server"

- name: Generate agent-client-acl.hcl configuration
  template:
    src: "{{ consul_mode }}/agent-client-acl.hcl.j2"
    dest: "{{ consul_config_dir }}/agent-client-acl.hcl"
    owner: root
    group: "{{ consul_user_name }}"
    mode: 0640
  when: consul_mode == "node"

- name: Generate agent-server-networking.hcl configuration
  template:
    src: "{{ consul_mode }}/agent-server-networking.hcl.j2"
    dest: "{{ consul_config_dir }}/agent-server-networking.hcl"
    owner: root
    group: "{{ consul_user_name }}"
    mode: 0640
  when: consul_mode == "server"

- name: Copy agent-server-specific-ui.hcl configuration
  copy:
    src: "agent-server-specific-ui.hcl"
    dest: "{{ consul_config_dir }}/agent-server-specific-ui.hcl"
    owner: root
    group: "{{ consul_user_name }}"
    mode: 0640
  when: consul_mode == "server"

- name: Generate agent-server-telemetry.hcl configuration
  template:
    src: "{{ consul_mode }}/agent-server-telemetry.hcl.j2"
    dest: "{{ consul_config_dir }}/agent-server-telemetry.hcl"
    owner: root
    group: "{{ consul_user_name }}"
    mode: 0640
  when: consul_mode == "server"

- name: Generate agent-server-tls.hcl configuration
  template:
    src: "{{ consul_mode }}/agent-server-tls.hcl.j2"
    dest: "{{ consul_config_dir }}/agent-server-tls.hcl"
    owner: root
    group: "{{ consul_user_name }}"
    mode: 0640
  when: consul_mode == "server"

- name: Generate consul.hcl configuration
  template:
    src: "{{ consul_mode }}/consul.hcl.j2"
    dest: "{{ consul_config_dir }}/consul.hcl"
    owner: root
    group: "{{ consul_user_name }}"
    mode: 0640
  notify: Restart consul