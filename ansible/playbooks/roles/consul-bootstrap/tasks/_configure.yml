---
- name: Create consul data directory
  file:
    path: "{{ consul_data_dir }}"
    state: directory
    mode: 0750
    owner: "{{ consul_user_name }}"
    group: "{{ consul_user_name }}"

- name: Create consul config directories
  file:
    path: "{{ item }}"
    state: directory
    mode: 0750
    owner: "root"
    group: "{{ consul_user_name }}"
  with_items:
    - "{{ consul_config_dir }}"
    - "{{ consul_config_dir }}/tls"

- name: Generate root certificate locally
  include_tasks: "_local_ca_certificate.yml"

- name: Root certificate upload
  copy:
    src: "{{ consul_local_tls_dir }}/consul-root.cer"
    dest: "{{ consul_config_dir }}/tls/consul-root.cer"
    mode: 0640
    owner: "root"
    group: "{{ consul_user_name }}"

- name: Create node cert signing
  shell: openssl req \
    -newkey rsa:4096 \
    -nodes \
    -subj "{{ consul_node_cert_subj }}" \
    -out {{ consul_config_dir }}/tls/consul-node.csr \
    -keyout {{ consul_config_dir }}/tls/consul-node.key \
    && chown root:{{ consul_user_name}} {{ consul_config_dir }}/tls/consul-node.* \
    && chmod 640 {{ consul_config_dir }}/tls/consul-node.*
  args:
    executable: /bin/bash
    chdir: "{{ consul_config_dir }}/tls"
    creates: "{{ consul_config_dir }}/tls/consul-node.csr"

- name: Get certificate signing request
  fetch:
    src: "{{ consul_config_dir }}/tls/consul-node.csr"
    dest: "{{ consul_node_tls_workdir }}/consul-node.csr"
    flat: yes

- name: Generate node certificate from csr
  include_tasks: _local_node_certificate.yml


- name: Upload certificate
  copy:
    src: "{{ consul_node_tls_workdir }}/consul-node.cer"
    dest: "{{ consul_config_dir }}/tls/consul-node.cer"
    owner: "root"
    group: "{{ consul_user_name }}"
    mode: 0640
  notify: Restart consul

- name: Generate agent configuration
  template:
    src: "config.json.j2"
    dest: "{{ consul_config_dir }}/config.json"
    owner: root
    group: "{{ consul_user_name }}"
    mode: 0640
  notify: Restart consul

- name: Generate default variables
  template:
    src: "{{ consul_mode }}/defaults.j2"
    dest: "/etc/default/consul"
    owner: root
    group: "{{ consul_user_name }}"
    mode: 0640
  notify: Restart consul

- name: Generate services variables
  template:
    src: "server/ui.consul-service.json.j2"
    dest: "/etc/consul.d/ui.consul-service.json"
    owner: root
    group: "{{ consul_user_name }}"
    mode: 0640
  notify: Restart consul
  tags: traefik
  when: consul_mode == "server"