---
- name: Install rsync
  ansible.builtin.apt:
    pkg:
      - rsync
    state: present

- name: Create consul data directory
  file:
    path: "{{ consul_data_dir }}"
    state: directory
    mode: 0750
    owner: "{{ consul_user_name }}"
    group: "{{ consul_user_name }}"

- name: Create consul config directories
  file:
    path: "{{ item }}"
    state: directory
    mode: 0750
    owner: "{{ consul_user_name }}"
    group: "{{ consul_user_name }}"
  with_items:
    - "{{ consul_config_dir }}"
    - "{{ consul_config_dir }}/certs"
    - "{{ consul_config_dir }}/tls"
    - "{{ consul_config_dir }}/tokens"
    - "{{ consul_config_dir }}/policies"

- name: Generate root certificate for dc
  shell: |
    consul tls ca create
  args:
    executable: /bin/bash
    chdir: "{{ consul_config_dir }}/certs"
    creates: "{{ consul_config_dir }}/certs/consul-agent-ca.pem"
  when: inventory_hostname == "consul-1"
  become: no

- name: Fetch certificate locally
  include_tasks: "_local_get_certificates.yml"

- name: Root certificate upload to masters
  copy:
    src: "{{ consul_local_tls_dir }}/consul-agent-ca.pem"
    dest: "{{ consul_config_dir }}/tls/consul-agent-ca.pem"
    mode: 0640
    owner: "{{ consul_user_name }}"
    group: "{{ consul_user_name }}"

- name: Root key upload to masters
  copy:
    src: "{{ consul_local_tls_dir }}/consul-agent-ca-key.pem"
    dest: "{{ consul_config_dir }}/tls/consul-agent-ca-key.pem"
    mode: 0640
    owner: "{{ consul_user_name }}"
    group: "{{ consul_user_name }}"

- name: Add ca to trusted ca
  shell: |
    cp {{ consul_config_dir }}/tls/consul-agent-ca.pem /usr/local/share/ca-certificates/consul-agent-ca.cr
    update-ca-certificates
  args:
    executable: /bin/bash
  become: yes

- name: Generate server certificates
  shell: |
    consul tls cert create \
      -server \
      -dc dc1 \
      -domain consul \
      -additional-dnsname=localhost \
      -additional-dnsname=server.dc1.consul \
      -additional-dnsname=consul-1.dc1.consul \
      -additional-dnsname=consul-2.dc1.consul \
      -additional-dnsname=consul-3.dc1.consul \
      -additional-dnsname=deploy.dc1.consul \
      -additional-dnsname=traefik.dc1.consul \
      -additional-dnsname=teleport.dc1.consul \
      -additional-dnsname=boundary.dc1.consul \
      -additional-dnsname=influxdb.dc1.consul \
      -additional-dnsname=alertmanager.dc1.consul \
      -additional-dnsname=loki.dc1.consul \
      -additional-dnsname=prometheus.dc1.consul \
      -additional-dnsname=grafane.dc1.consul \
      -additional-dnsname=runners.dc1.consul \
      -additional-dnsname=staging.dc1.consul \
      -additional-dnsname=vault-1.dc1.consul \
      -additional-dnsname=vault-2.dc1.consul \
      -additional-ipaddress=192.168.121.161 \
      -additional-ipaddress=192.168.121.162 \
      -additional-ipaddress=192.168.121.163 \
      -additional-dnsname=*.service.consul
  args:
    executable: /bin/bash
    chdir: "{{ consul_config_dir }}/tls/"
  become: yes
  when: consul_mode == "server"

- name: Generate node certificates
  shell: |
    consul tls cert create \
      -client \
      -dc dc1 \
      -domain consul \
      -additional-dnsname=localhost \
      -additional-dnsname=client.dc1.consul \
      -additional-dnsname=deploy.dc1.consul \
      -additional-dnsname=traefik.dc1.consul \
      -additional-dnsname=vault-1.dc1.consul \
      -additional-dnsname=vault-2.dc1.consul \
      -additional-dnsname=teleport.dc1.consul \
      -additional-dnsname=boundary.dc1.consul \
      -additional-dnsname=alertmanager.dc1.consul \
      -additional-dnsname=loki.dc1.consul \
      -additional-dnsname=prometheus.dc1.consul \
      -additional-dnsname=grafane.dc1.consul \
      -additional-dnsname=runners.dc1.consul \
      -additional-dnsname=staging.dc1.consul \
      -additional-ipaddress=192.168.121.177 \
      -additional-ipaddress=192.168.121.170 \
      -additional-ipaddress=192.168.121.164 \
      -additional-ipaddress=192.168.121.165 \
      -additional-ipaddress=192.168.121.100 \
      -additional-ipaddress=192.168.121.10 \
      -additional-ipaddress=192.168.121.30 \
      -additional-ipaddress=192.168.121.31 \
      -additional-ipaddress=192.168.121.32 \
      -additional-ipaddress=192.168.121.33 \
      -additional-ipaddress=192.168.121.34 \
      -additional-ipaddress=192.168.121.40 \
      -additional-ipaddress=192.168.121.50 \
      -additional-dnsname=*.service.consul
  args:
    executable: /bin/bash
    chdir: "{{ consul_config_dir }}/tls/"
  become: yes
  when: consul_mode == "node"

- name: Prepare tls files on servers
  shell: |
    mv dc1-server-consul-0.pem consul-agent.pem
    mv dc1-server-consul-0-key.pem consul-agent-key.pem
    rm -rf consul-agent-ca-key.pem
    chown -R root:{{ consul_user_name }} ./
    chmod -R 0770 ./
  args:
    chdir: "{{ consul_config_dir }}/tls"
    executable: /bin/bash
  when: consul_mode == "server"
  become: true

- name: Prepare tls files on clients
  shell: |
    mv dc1-client-consul-0.pem consul-agent.pem
    mv dc1-client-consul-0-key.pem consul-agent-key.pem
    rm -rf consul-agent-ca-key.pem
    chown -R root:{{ consul_user_name }} ./
    chmod -R 0770 ./
  args:
    chdir: "{{ consul_config_dir }}/tls"
    executable: /bin/bash
  when: consul_mode == "node"
  become: true

- name: Get Gossip
  ansible.builtin.command:
    cmd: consul keygen
  register: gossip
  run_once: true
  changed_when: gossip.rc != 0
  become: no

- name: Generate agent-gossip-encryption.hcl configuration
  template:
    src: "{{ consul_mode }}/agent-gossip-encryption.hcl.j2"
    dest: "{{ consul_config_dir }}/agent-gossip-encryption.hcl"
    owner: root
    group: "{{ consul_user_name }}"
    mode: 0640
  when: consul_mode == "server"

- name: Generate agent-server-acl.hcl configuration
  template:
    src: "{{ consul_mode }}/agent-server-acl.hcl.j2"
    dest: "{{ consul_config_dir }}/agent-server-acl.hcl"
    owner: root
    group: "{{ consul_user_name }}"
    mode: 0640
  when: consul_mode == "server"

- name: Generate agent-client-acl.hcl configuration
  template:
    src: "{{ consul_mode }}/agent-client-acl.hcl.j2"
    dest: "{{ consul_config_dir }}/agent-client-acl.hcl"
    owner: root
    group: "{{ consul_user_name }}"
    mode: 0640
  when: consul_mode == "node"

- name: Generate agent-server-networking.hcl configuration
  template:
    src: "{{ consul_mode }}/agent-server-networking.hcl.j2"
    dest: "{{ consul_config_dir }}/agent-server-networking.hcl"
    owner: root
    group: "{{ consul_user_name }}"
    mode: 0640
  when: consul_mode == "server"

- name: Copy agent-server-specific-ui.hcl configuration
  copy:
    src: "agent-server-specific-ui.hcl"
    dest: "{{ consul_config_dir }}/agent-server-specific-ui.hcl"
    owner: root
    group: "{{ consul_user_name }}"
    mode: 0640
  when: consul_mode == "server"

- name: Generate agent-server-telemetry.hcl configuration
  template:
    src: "{{ consul_mode }}/agent-server-telemetry.hcl.j2"
    dest: "{{ consul_config_dir }}/agent-server-telemetry.hcl"
    owner: root
    group: "{{ consul_user_name }}"
    mode: 0640
  when: consul_mode == "server"

- name: Generate agent-server-tls.hcl configuration
  template:
    src: "{{ consul_mode }}/agent-server-tls.hcl.j2"
    dest: "{{ consul_config_dir }}/agent-server-tls.hcl"
    owner: root
    group: "{{ consul_user_name }}"
    mode: 0640
  when: consul_mode == "server"

- name: Generate consul.hcl configuration
  template:
    src: "{{ consul_mode }}/consul.hcl.j2"
    dest: "{{ consul_config_dir }}/consul.hcl"
    owner: root
    group: "{{ consul_user_name }}"
    mode: 0640
  notify: Restart consul