---
# playbooks/roles/vault_apprle_setup/tasks/_pki_setup.yml

- name: Vérifier si le moteur PKI est déjà activé
  shell: |
    vault secrets list | grep pki/ | wc -l
  register: pki_status
  environment:
    VAULT_ADDR: "{{ vault_proxy_addr }}"
    VAULT_CACERT: "{{ vault_tls_directory }}/{{ vault_tls_ca_file }}"
    VAULT_TOKEN: "{{ vault_parent_token.stdout }}"
  changed_when: false
  when:
    - active_vault_host is defined

- name: Display Pki status
  debug:
    msg: >
      Pki is {{ 'enabled' if pki_status.stdout == "1" else 'not enabled' }} in Vault
  when: active_vault_host is defined

- name: Activer le moteur PKI sur Vault actif si non activé
  command: >
    vault secrets enable -path=pki pki
  when:
    - active_vault_host is defined
    - pki_status.stdout == "0"
  environment:
    VAULT_ADDR: "{{ vault_proxy_addr }}"
    VAULT_CACERT: "{{ vault_tls_directory }}/{{ vault_tls_ca_file }}"
    VAULT_TOKEN: "{{ vault_parent_token.stdout }}"
  register: pki_enable_output

- name: Configuration du ttl max pour le pki
  command: >
    vault secrets tune -max-lease-ttl={{ ca_pki_ttl }} pki
  when:
    - active_vault_host is defined
  environment:
    VAULT_ADDR: "{{ vault_proxy_addr }}"
    VAULT_CACERT: "{{ vault_tls_directory }}/{{ vault_tls_ca_file }}"
    VAULT_TOKEN: "{{ vault_parent_token.stdout }}"

- name: Configurer les URLs du moteur PKI
  command: >
    vault write pki/config/urls
      issuing_certificates="{{ vault_proxy_addr }}/v1/pki/ca"
      crl_distribution_points="{{ vault_proxy_addr }}/v1/pki/crl"
  when:
    - active_vault_host is defined
    - pki_status.stdout == "0"
  environment:
    VAULT_ADDR: "{{ vault_proxy_addr }}"
    VAULT_CACERT: "{{ vault_tls_directory }}/{{ vault_tls_ca_file }}"
    VAULT_TOKEN: "{{ vault_parent_token.stdout }}"

- name: Générer le certificat CA racine
  command: >
    vault write -field=certificate pki/root/generate/internal
      common_name="{{ ca_pki_common_name }}"
      ttl="{{ ca_pki_ttl }}"
  register: pki_root_cert
  when:
    - active_vault_host is defined
    - pki_status.stdout == "0"
  environment:
    VAULT_ADDR: "{{ vault_proxy_addr }}"
    VAULT_CACERT: "{{ vault_tls_directory }}/{{ vault_tls_ca_file }}"
    VAULT_TOKEN: "{{ vault_parent_token.stdout }}"

- name: Configurer le CA racine dans le moteur PKI
  command: >
    vault write pki/config/ca pem_bundle="{{ pki_root_cert.stdout }}"
  when:
    - active_vault_host is defined
    - pki_status.stdout == "0"
  environment:
    VAULT_ADDR: "{{ vault_proxy_addr }}"
    VAULT_CACERT: "{{ vault_tls_directory }}/{{ vault_tls_ca_file }}"
    VAULT_TOKEN: "{{ vault_parent_token.stdout }}"

- name: Générer le CRL
  command: >
    vault write -force pki/tidy tidy_cert_store=true tidy_revoked_certs=true
  register: pki_crl
  when:
    - active_vault_host is defined
    - pki_status.stdout == "0"
  environment:
    VAULT_ADDR: "{{ vault_proxy_addr }}"
    VAULT_CACERT: "{{ vault_tls_directory }}/{{ vault_tls_ca_file }}"
    VAULT_TOKEN: "{{ vault_parent_token.stdout }}"

- name: Check CRL
  command: vault read pki/cert/crl
  register: crl_status

- name: Vérifier la génération du CRL
  debug:
    msg: "CRL généré avec succès.\n {{ crl_status.stdout  }}"
  when: crl_status is defined