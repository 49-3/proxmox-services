---
- name: Trouve le nombre de certificats
  find:
    paths: "{{ consul_tls_tmp_directory }}"
    file_type: file
  register: found_certs
  retries: 10
  delay: 15
  until: found_certs.matched == 3

- name: Affiche le nombre de certificats trouvés
  debug:
    msg: "Nombre de certificats : {{ found_certs.matched }}"

- name: Remplacer les cerificats
  shell: |
    mv {{ consul_tls_tmp_directory }}/* {{ consul_tls_directory }}
    cp {{ consul_tls_directory }}/{{ consul_tls_ca_file }} {{ vault_tls_directory }}/{{ vault_tls_ca_file }}
    cp {{ consul_tls_directory }}/{{ consul_tls_cert_file }} {{ vault_tls_directory }}/{{ vault_tls_cert_file }}
    cp {{ consul_tls_key_file }}/{{ consul_tls_ca_file }} {{ vault_tls_directory }}/{{ vault_tls_key_file }}
    chown -R root:consul {{ consul_tls_directory }}
    chown -R root:vault {{ vault_tls_directory }}
    chmod -R 750 {{ consul_tls_directory }} {{ vault_tls_directory }}
  args:
    executable: /bin/bash

- name: Déployer la configuration de Vault Agent finale
  template:
    src: "{{ item }}"
    dest: "{{ vault_agent_dir }}/vault-agent.hcl"
    owner: root
    group: root
    mode: '0644'
  with_items:
    - "{{ vault_mode }}/vault-agent-approle.hcl.j2"
    - vault-auth.hcl.j2
    - vault-network.hcl.j2

- name: Restart vault-agent.service
  systemd:
    name: "vault-agent.service"
    state: restarted
    enabled: yes
    daemon_reload: yes

- name: Reload consul
  systemd:
    name: "consul"
    state: reloaded
    enabled: yes
    daemon_reload: yes

# flush vault configuration

- name: Reload vault serveur
  systemd:
    name: "vault"
    state: reloaded
    enabled: yes
    daemon_reload: yes
  when: vault_mode == "server"

- name: Supprimer le dossier de Certificats temporaire
  ansible.builtin.file:
    path: '{{ item }}'
    state: absent
  with_items:
  - "{{ consul_tls_tmp_directory }}"

- name: Supprimer le dossier de secret tls sur deploy
  ansible.builtin.file:
    path: '{{ item }}'
    state: absent
  with_items:
  - "{{ secrets_dir }}/tls"
  delegate_to: deploy
  run_once: true
  become: true