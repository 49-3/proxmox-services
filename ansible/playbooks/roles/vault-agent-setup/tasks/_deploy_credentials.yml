---
# playbooks/roles/vault_apprle_setup/tasks/_detect_active_vault.yml
- name: Get vault_token from deploy secrets
  shell: |
    cat {{ deploy_vault_secret_dir }}/vault_token.txt
  args:
    executable: /bin/bash
  register: vault_parent_token
  delegate_to: deploy
  run_once: true
  become: yes

- name: Récupérer le RoleID de l'AppRole consul-template
  shell: |
    vault read -field=role_id auth/approle/role/consul-template-role/role-id
  environment:
    VAULT_TOKEN: "{{ vault_parent_token.stdout }}"
  args:
    executable: /bin/bash
  register: role_id_output
  run_once: true

- name: Récupérer le SecretID de l'AppRole consul-template
  shell: |
    vault write -f -field=secret_id auth/approle/role/consul-template-role/secret-id
  environment:
    VAULT_TOKEN: "{{ vault_parent_token.stdout }}"
  args:
    executable: /bin/bash
  register: secret_id_output
  run_once: true

- name: Générer le fichier de credentials consul_template_approle_credentials.yml
  copy:
    dest: "{{ secrets_dir }}/consul/consul_template_approle_credentials.yml"
    content: |
      ---
      consul_template_role_id: "{{ role_id_output.stdout }}"
      consul_template_secret_id: "{{ secret_id_output.stdout }}"
    mode: '0600'
  become: yes
  delegate_to: deploy
  run_once: true

- name: Déployer le RoleID
  copy:
    content: "{{ role_id_output.stdout }}"
    dest: "/etc/vault.d/role_id"
    owner: root
    group: root
    mode: '0600'
  when: "'vaults' not in group_names"

- name: Déployer le SecretID
  copy:
    content: "{{ secret_id_output.stdout }}"
    dest: "/etc/vault.d/secret_id"
    owner: root
    group: root
    mode: '0600'
  when: "'vaults' not in group_names"